<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<mx:VBox 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns="weave.editors.*"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	creationPolicy="all"
	implements="weave.api.ui.IDataSourceEditor" xmlns:ui="weave.ui.*"
	>
	<mx:Label id="editorTitle" fontWeight="bold" text="{label}"/>
	<ui:Indent label="{lang('Source Name *')}">
		<mx:TextInput id="sourceName" width="100%"/>
	</ui:Indent>
	<ui:Indent label="{lang('Source URL *')}">
		<ui:TextInputWithPrompt id="url" width="100%" prompt="http://www.example.com/" text="https://opendata.socrata.com"/>
	</ui:Indent>
	<ui:Indent label="{lang('Items to show in hierarchy')}" verticalAlign="top">
		<ui:CustomCheckBox id="showViews" label="{lang('View types')}" selected="true"/>
		<ui:CustomCheckBox id="showCategories" label="{lang('Categories')}" selected="true"/>
		<ui:CustomCheckBox id="showTags" label="{lang('Tags')}" selected="true"/>
	</ui:Indent>
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			import weave.api.core.ILinkableObject;
			import weave.api.data.IDataSource;
			import weave.data.DataSources.SocrataDataSource;
			
			override protected function createChildren():void
			{
				super.createChildren();
				sourceName.text = WeaveAPI.globalHashMap.generateUniqueName(WeaveAPI.ClassRegistry.getDisplayName(SocrataDataSource));
			}
			
			[Bindable] private var target:SocrataDataSource = null;
			public function setTarget(object:ILinkableObject):void
			{
				target = object as SocrataDataSource;
				
				if (!parent)
				{
					callLater(setTarget, arguments);
					return;
				}
				
				if (target)
				{
					sourceName.text = WeaveAPI.globalHashMap.getName(target);
					sourceName.editable = false;
					sourceName.toolTip = lang("Source name is not editable once added to the session. If needed, delete the source and add it again with the new name.");
					
					url.text = target.url.value;
					showViews.selected = target.showViewTypes.value;
					showCategories.selected = target.showCategories.value;
					showTags.selected = target.showTags.value;
				}
			}
			
			public function hasPendingChanges():Boolean
			{
				return (target.url.value || '') != (url.text || '')
					|| target.showViewTypes.value != showViews.selected
					|| target.showCategories.value != showCategories.selected
					|| target.showTags.value != showTags.selected;
			}
			
			public function applyChanges():void
			{
				target.url.value = url.text;
				target.showViewTypes.value = showViews.selected;
				target.showCategories.value = showCategories.selected;
				target.showTags.value = showTags.selected;
			}
			
			public function createDataSource():IDataSource
			{
				if (!sourceName.text || (!url.text))
				{
					Alert.show(lang("Please fill all required fields"), lang("Error"));
					return null;
				}
				if (WeaveAPI.globalHashMap.getObject(sourceName.text))
				{
					Alert.show(lang("Source Name already being used. Please give a different name"), lang("Error"));
					return null;
				}
				target = WeaveAPI.globalHashMap.requestObject(sourceName.text, SocrataDataSource, false);
				if (!target)
				{
					Alert.show(lang("Unexpected problem. Unable to add the data source."));
					return null;
				}
				applyChanges();
				return target;
			}
		]]>
	</mx:Script>
</mx:VBox>