<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<ui:DraggablePanel
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns="weave.editors.managers.*"
	xmlns:ui="weave.ui.*"
	enablePercentageCoords="false"
	escapeKeyClosesPanel="true"
	title="{lang('Add new data source')}">
	<mx:VBox initialize="UIUtils.pad(event, 8, 100, 100)">
		<mx:Box id="container" initialize="UIUtils.pad(event, 0, 100, 100, true)"/>
		<mx:HBox width="100%">
			<mx:Spacer width="100%"/>
			<mx:Button id="addButton" label="{lang('Add this data source')}" click="addSource()"/>
			<mx:Button id="cancelButton" label="{lang('Cancel')}" click="removePanel()"/>
		</mx:HBox>
	</mx:VBox>
	
	<mx:Script>
		<![CDATA[
			import mx.core.Container;
			
			import weave.api.data.IDataSource;
			import weave.api.data.IDataSource_File;
			import weave.api.disposeObject;
			import weave.api.newDisposableChild;
			import weave.api.reportError;
			import weave.api.ui.IDataSourceEditor;
			import weave.core.ClassUtils;
			import weave.core.UIUtils;
			import weave.menus.FileMenu;

			override protected function inConstructor():void
			{
				super.inConstructor();
				
				panelWidth.value = "700";
				panelHeight.value = "500";
			}
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				
				dataSourceType = _dataSourceType;
			}
			
			public function get editor():IDataSourceEditor { return _editor; }
			
			private var _editor:IDataSourceEditor;
			private var _dataSourceType:Class;
			
			public function set dataSourceType(type:Class):void
			{
				if (_dataSourceType == type)
					return;
				disposeObject(_editor);
				container.removeAllChildren();
				_editor = null;
				_dataSourceType = type;
				
				if (!_dataSourceType)
					return;
				
				var Editor:Class = WeaveAPI.EditorManager.getEditorClass(_dataSourceType);
				if (!ClassUtils.classImplements(getQualifiedClassName(Editor), getQualifiedClassName(IDataSourceEditor)))
				{
					reportError(getQualifiedClassName(Editor) + " does not implement IDataSourceEditor");
					return;
				}
				_editor = newDisposableChild(this, Editor);
				container.addChild(_editor as DisplayObject);
				if (_editor is Container)
					(_editor as Container).label = lang('Add {0}', WeaveAPI.ClassRegistry.getDisplayName(_dataSourceType));
				_editor.percentWidth = 100;
				_editor.percentHeight = 100;
			}
			
			public function addSource():void
			{
				if (!_editor)
					return;
				
				var ds:IDataSource = _editor.createDataSource();
				if (ds)
				{
					removePanel();
					
					// if this is the only data source and it's a file, try to initialize as a template
					var sources:Array = WeaveAPI.globalHashMap.getObjects(IDataSource_File);
					if (sources.length == 1 && sources[0] == ds)
					{
						if (FileMenu.initTemplate(ds as IDataSource_File))
							return;
					}
					
					// otherwise, open the DataSourceManager
					var dsm:DataSourceManager = DraggablePanel.openStaticInstance(DataSourceManager);
					dsm.browse(ds);
				}
			}
			
			override public function removePanel():void
			{
				dataSourceType = null;
				super.removePanel();
			}
		]]>
	</mx:Script>
</ui:DraggablePanel>