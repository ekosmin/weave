<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<mx:Box xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns="weave.editors.*"
		 xmlns:ui="weave.ui.*" implements="weave.api.ui.ILinkableObjectEditor"
		 label="{lang('Axis labeling')}"
		 direction="horizontal"
		 creationPolicy="all" >
	
	<mx:VBox horizontalAlign="center" verticalGap="4">
		<mx:Label text="{lang('Label properties')}"/>
		<mx:HRule width="100%"/>
		<ui:IndentTextInput label="{lang('Wrap size:')}" id="labelWordWrapSize" inputWidth="60"/>
		<ui:Indent label="{lang('Angle:')}">
			<mx:NumericStepper id="axisLabelRelativeAngle" minimum="-180" maximum="180" stepSize="15" width="60"/>
		</ui:Indent>
		<ui:Indent label="{lang('Horizontal offset:')}">
			<mx:NumericStepper id="axisLabelHorizontalDistance" minimum="-50" maximum="50" stepSize="5" width="60"/>
		</ui:Indent>
		<ui:Indent label="{lang('Vertical offset:')}">
			<mx:NumericStepper id="axisLabelVerticalDistance" minimum="-50" maximum="50" stepSize="5" width="60"/>
		</ui:Indent>
		<ui:Indent label="{lang('Requested count:')}">
			<mx:NumericStepper id="tickCountStepper" maximum="100" minimum="0" stepSize="1" width="60"/>
		</ui:Indent>
		<ui:CustomCheckBox id="forceTickCount" label="{lang('Force label count')}" width="100%"/>
		<ui:Indent label="{lang('Alignment:')}" verticalAlign="top">
			<ui:AlignmentControl id="labelAlign" toolTip="{lang('Axis label alignment')}"/>
		</ui:Indent>
	</mx:VBox>

	<mx:VRule height="100%"/>
	
	<mx:VBox id="firstVBox" width="100%" height="100%">
		<ui:CustomGrid horizontalAlign="center" verticalAlign="middle"
					   creationComplete="event.target.getChildAt(0).setStyle('paddingBottom',-event.target.getStyle('verticalGap'))">
			<ui:dataProvider>
				<mx:Array>
					<mx:Array>
						<mx:Spacer/>
						<mx:Label text="{lang('Color')}"/>
						<mx:Label text="{lang('Thickness')}"/>
						<mx:Label text="{lang('Alpha')}"/>
					</mx:Array>
					<mx:Array>
						<ui:Indent label="{lang('Grid lines:')}" group="{firstVBox}"/>
						<ui:CustomColorPicker id="gridColorPicker"/>
						<mx:NumericStepper id="gridThicknessStepper"
										   maximum="10" minimum="1"/>
						<mx:NumericStepper id="gridAlphaStepper"
										   maximum="1" minimum="0" stepSize="0.1"
										   toolTip="{lang('0 = transparent; 1 = opaque')}"/>
					</mx:Array>
					<mx:Array>
						<ui:Indent label="{lang('Axis border:')}" group="{firstVBox}"/>
						<ui:CustomColorPicker id="axisColorPicker"/>
						<mx:NumericStepper id="axisThicknessStepper"
										   maximum="50" minimum="0"/>
						<mx:NumericStepper id="axisAlphaStepper"
										   maximum="1" minimum="0" stepSize="0.1"
										   toolTip="{lang('0 = transparent; 1 = opaque')}"/>
					</mx:Array>
				</mx:Array>
			</ui:dataProvider>
		</ui:CustomGrid>
		<ui:IndentTextInput label="{lang('Axis title:')}" id="overrideAxisName" inputWidth="100%"/>
		<ui:Indent label="{lang('Label function:')}" verticalAlign="top" height="100%">
			<ui:CodeEditor id="labelFunction"/>
		</ui:Indent>
	</mx:VBox>

	<mx:Script>
		<![CDATA[
			import weave.api.core.ILinkableObject;
			import weave.api.linkBindableProperty;
			import weave.visualization.plotters.SimpleAxisPlotter;
			
			public function setTarget(object:ILinkableObject):void
			{
				if (!parent)
				{
					callLater(setTarget, arguments);
					return;
				}
				
				var plotter:SimpleAxisPlotter = object as SimpleAxisPlotter;
				if (plotter)
				{
					linkBindableProperty(plotter.overrideAxisName, overrideAxisName, 'text');
					linkBindableProperty(plotter.labelFunction, labelFunction, 'text');
					linkBindableProperty(plotter.labelWordWrapSize, labelWordWrapSize, 'text');
					linkBindableProperty(plotter.axisLabelHorizontalDistance, axisLabelHorizontalDistance, 'value');
					linkBindableProperty(plotter.axisLabelVerticalDistance, axisLabelVerticalDistance, 'value');
					linkBindableProperty(plotter.axisLabelRelativeAngle, axisLabelRelativeAngle, 'value');
					linkBindableProperty(plotter.labelHorizontalAlign, labelAlign, 'horizontalAlign');
					linkBindableProperty(plotter.labelVerticalAlign, labelAlign, 'verticalAlign');
					linkBindableProperty(plotter.tickCountRequested, tickCountStepper, 'value');
					linkBindableProperty(plotter.axisGridLineColor, gridColorPicker, 'selectedColor');
					linkBindableProperty(plotter.axisGridLineThickness, gridThicknessStepper, 'value');
					linkBindableProperty(plotter.axisGridLineAlpha, gridAlphaStepper, 'value');
					linkBindableProperty(plotter.axesColor, axisColorPicker, 'selectedColor');
					linkBindableProperty(plotter.axesThickness, axisThicknessStepper, 'value');
					linkBindableProperty(plotter.axesAlpha, axisAlphaStepper, 'value');
					linkBindableProperty(plotter.forceTickCount, forceTickCount, 'selected');
				}
			}
			public function hasPendingChanges():Boolean { return false; }
			public function applyChanges():void { }
		]]>
	</mx:Script>
</mx:Box>
