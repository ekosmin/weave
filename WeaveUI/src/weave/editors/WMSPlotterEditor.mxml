<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns="weave.editors.*"
		 xmlns:ui="weave.ui.*"
		 label="{lang('WMS images')}"
		 implements="weave.api.ui.ILinkableObjectEditor">
	<ui:Indent group="{this}" label="{lang('Service:')}">
		<ui:CustomComboBox editable="false" id="wmsLayerService"
						prompt="{lang('Select a service')}"
						dataProvider="{(function():*{return WMSProviders.providers;}())}"
						creationComplete="setWMSLayerServiceOnPlotterChange()"
						change="handleWMSProviderChange()"/>
	</ui:Indent>
	<ui:Indent group="{this}" label="{lang('Month:')}" id="monthSetting">
		<ui:CustomComboBox id="requestStyles" editable="false" 
						dataProvider="{['Dec ','Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec','Jan ']}"
						change="handleStyleInputChange()"
						toolTip="{lang('Enter the month of the NASA images.')}"/>
	</ui:Indent>
	<mx:Box id="customWMSSettings" visible="false" width="100%">
		<ui:Indent group="{this}" label="{lang('URL:')}">
			<ui:TextInputWithPrompt id="wmsURLText" width="100%"/>
			<ui:HelpComponent>
				Enter a URL with placeholders for tile parameters.
				The following placeholders may be used: \{z} \{y} \{x} \{bbox} \{size}
				Example url: http://tile.openstreetmap.org/\{z}/\{x}/\{y}.png
			</ui:HelpComponent>
		</ui:Indent>
		<ui:IndentTextInput group="{this}" id="projSRSText" label="{lang('Projection SRS:')}"/>
		<ui:IndentTextInput group="{this}" id="maxZoomText" label="{lang('Maximum Zoom:')}"/>
		<ui:IndentTextInput group="{this}" id="creditInfoText" label="{lang('Copyright text:')}"/>
	</mx:Box>
	<ui:Indent group="{this}">
		<mx:VBox>
			<mx:CheckBox label="{lang('Prefer Lower Quality')}"
						 creationComplete="linkBindableProperty(_plotter.preferLowerQuality, event.target, 'selected')"/>
			<mx:CheckBox label="{lang('Show Failed Downloads')}"
						 creationComplete="linkBindableProperty(_plotter.displayMissingImage, event.target, 'selected')"/>
		</mx:VBox>
	</ui:Indent>
	
	<mx:Script>
		<![CDATA[
			import weave.api.core.ILinkableObject;
			import weave.api.getCallbackCollection;
			import weave.api.linkBindableProperty;
			import weave.api.unlinkBindableProperty;
			import weave.services.wms.CustomWMS;
			import weave.services.wms.OnEarthProvider;
			import weave.services.wms.WMSProviders;
			import weave.visualization.plotters.WMSPlotter;
			
			private var _plotter:WMSPlotter = null;
			
			public function setTarget(object:ILinkableObject):void
			{
				_plotter = object as WMSPlotter;
				getCallbackCollection(_plotter).addImmediateCallback(this,setWMSLayerServiceOnPlotterChange,true);
			}
			
			public function hasPendingChanges():Boolean { return false; }
			public function applyChanges():void { }
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				setWMSLayerServiceOnPlotterChange();
				handleWMSProviderChange();
			}
			
			private function handleStyleInputChange():void
			{
				
				if (_plotter == null)
					return;
				
				if (requestStyles.selectedLabel == null || requestStyles.selectedLabel == '')
					return;
				
				if (requestStyles.selectedLabel == 'Jan ')
					requestStyles.selectedIndex = 1;
				if (requestStyles.selectedLabel == 'Dec ')
					requestStyles.selectedIndex = 12;
				
				requestStyles.text = requestStyles.text.replace(' ','');
				
				_plotter.styles.value = requestStyles.text;
			}
			
			private function setWMSLayerServiceOnPlotterChange():void
			{
				if (!_plotter.providerName || !wmsLayerService)
					return;
				wmsLayerService.selectedItem = _plotter.providerName;
				handleWMSProviderChange();

			}
			
			private var _customWMS:CustomWMS = null;
			private function handleWMSProviderChange():void
			{
				_plotter.setProvider(wmsLayerService.selectedItem as String);
				
				// don't relink if service didn't change
				if (_customWMS == _plotter.service.internalObject)
					return;
				
				if (_customWMS != null)
				{
					unlinkBindableProperty(_customWMS.wmsURL,wmsURLText,"text");
					unlinkBindableProperty(_customWMS.tileProjectionSRS,projSRSText,"text");
					unlinkBindableProperty(_customWMS.maxZoom,maxZoomText,"text");
					unlinkBindableProperty(_customWMS.creditInfo,creditInfoText,"text");
				}
				
				_customWMS = _plotter.service.internalObject as CustomWMS;
				
				if (_customWMS)
				{
					customWMSSettings.includeInLayout = true;								
					customWMSSettings.visible = true;
					linkBindableProperty(_customWMS.wmsURL,wmsURLText,"text", 500);
					linkBindableProperty(_customWMS.tileProjectionSRS,projSRSText,"text");
					linkBindableProperty(_customWMS.maxZoom,maxZoomText,"text");
					linkBindableProperty(_customWMS.creditInfo,creditInfoText,"text");
				}
				else
				{
					customWMSSettings.includeInLayout = false;								
					customWMSSettings.visible = false;
				}
				
				monthSetting.visible = monthSetting.includeInLayout = (_plotter.service.internalObject is OnEarthProvider)
			}
		]]>
	</mx:Script>
</mx:VBox>
