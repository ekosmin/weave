<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<DraggablePanel xmlns:mx="http://www.adobe.com/2006/mxml"
		xmlns="weave.ui.*"
		borderColor="#939178"
		title="{lang('Translations')}"
		addedToStage="refresh()"
		escapeKeyClosesPanel="true"
		>
	<mx:VBox width="100%" height="100%"
			paddingLeft="8"
			paddingRight="8"
			paddingTop="8"
			paddingBottom="8">
		<mx:HBox width="100%">
			<mx:Button label="{lang('Import')}" click="importFile()" />
			<mx:Button label="{lang('Export')}" click="exportFile()" />
			<mx:Button label="{lang('Refresh')}" click="refresh()" />
			<mx:Spacer width="100%" />
			<mx:Label text="{lang('Active locale:')}"/>
			<mx:ComboBox id="localeComboBox" change="handleLocaleChange()" />
			<mx:Button label="{lang('New locale...')}" click="createNewLocale()"/>
		</mx:HBox>
		<mx:DataGrid id="dataGrid" variableRowHeight="true"
					 doubleClickEnabled="true" editable="true"
					 doubleClick="openTranslationEditor()"
					 itemEditEnd="itemEditEndHandler(event)"
					 keyDown="handleKeyDown(event)"
					 width="100%" height="100%">
			<mx:columns>
				<mx:DataGridColumn dataField="{ORIGINAL}" headerText="{lang('Original Text')}" editable="false" />
				<mx:DataGridColumn dataField="{LOCALED}" headerText="{lang('Translated Text')}" editable="true" />
			</mx:columns>
		</mx:DataGrid>
		<mx:HBox width="100%" verticalAlign="bottom">
			<Paragraph text="{lang('Double-click on an item to open a larger editor.\nModified translations are stored on your local machine.\nText will not appear here until you have opened a panel that uses it.\nSome GUI elements will not be updated until Weave is restarted.')}"/>
			<mx:Button label="{lang('Restart Weave')}" click="Weave.externalReload();"/>
		</mx:HBox>
	</mx:VBox>
	<mx:Script>
		<![CDATA[
			import mx.events.DataGridEvent;
			
			import weave.Weave;
			import weave.api.reportError;
			import weave.compiler.StandardLib;
			import weave.core.UIUtils;
			import weave.utils.PopUpUtils;
			
			private static const ORIGINAL:String = "original";
			private static const LOCALED:String = "localed";
			
			override protected function inConstructor():void
			{
				super.inConstructor();
				enableSubMenu.value = true;
				subMenuButton.data = [
					{
						label: lang("Switch to developer testing mode"),
						click: switchToDeveloperMode
					},{
						label: lang("Erase all translation data..."),
						click: resetAll
					}
				];
			}
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				refresh();
			}
			
			private function set activeLocale(value:String):void
			{
				WeaveAPI.LocaleManager.setLocale(value);
				refresh();
			}
			private function get activeLocale():String
			{
				return WeaveAPI.LocaleManager.getLocale();
			}
			
			private function handleLocaleChange():void
			{
				if (UIUtils.hasFocus(localeComboBox))
				{
					activeLocale = localeComboBox.selectedItem as String;
				}
			}
			private function refresh():void
			{
				if (!localeComboBox)
					return callLater(refresh);
				
				var vsp:int = dataGrid.verticalScrollPosition;
				var locale:String = activeLocale;
				var allLocales:Array = WeaveAPI.LocaleManager.getAllLocales();
				localeComboBox.dataProvider = allLocales;
				localeComboBox.selectedItem = activeLocale;
				
				var items:Array = [];
				var allData:Object = WeaveAPI.LocaleManager.getAllLocalizations();
				
				for (var text:String in allData)
				{
					var item:Object = {};
					item[ORIGINAL] = text;
					item[LOCALED] = allData[text][locale];
					items.push(item);
				}
				items.sortOn(ORIGINAL);
				
				dataGrid.dataProvider = items;
				dataGrid.verticalScrollPosition = vsp;
			}
			
			protected function itemEditEndHandler(event:DataGridEvent):void
			{
				if (event.itemRenderer)
				{
					var item:Object = event.itemRenderer.data;
					var newText:String = dataGrid.itemEditorInstance[dataGrid.columns[event.columnIndex].editorDataField];
					if (item[LOCALED] != newText)
						WeaveAPI.LocaleManager.registerTranslation(item[ORIGINAL], activeLocale, newText)
				}
			}
			
			private var fileReference:FileReference = new FileReference();
			
			private function importFile():void
			{
				try
				{
					fileReference.browse([ new FileFilter(lang("Weave language file"), "*.lang") ]);
					fileReference.addEventListener(Event.SELECT,   function (e:Event):void { fileReference.load(); } );
					fileReference.addEventListener(Event.COMPLETE, function (e:Event):void {
						var bytes:ByteArray = fileReference.data;
						bytes.uncompress();
						WeaveAPI.LocaleManager.importLocalizations(bytes.readObject());
						refresh();
					});
				}
				catch (e:Error)
				{
					reportError(e);
				}
			}
			private function exportFile():void
			{
				var bytes:ByteArray = new ByteArray();
				bytes.writeObject(WeaveAPI.LocaleManager.getAllLocalizations());
				bytes.compress();
				
				fileReference.save(bytes, "Weave.lang");
			}
			
			private function createNewLocale():void
			{
				var alertBox:AlertTextBox = AlertTextBox.show(lang("New locale"), lang("Please select a new locale ID:"));
				var ids:Array;
				try
				{
					ids = getDefinitionByName('flash.globalization.StringTools').getAvailableLocaleIDNames();
				}
				catch (e:Error)
				{
					trace(e);
					ids = 'ar-SA,bg-BG,ca-ES,zh-TW,cs-CZ,da-DK,de-DE,el-GR,en-US,es-ES@collation=traditional,fi-FI,fr-FR,he-IL,hu-HU,is-IS,it-IT,ja-JP,ko-KR,nl-NL,nb-NO,pl-PL,pt-BR,ro-RO,ru-RU,hr-HR,sk-SK,sq-AL,sv-SE,th-TH,tr-TR,ur-PK,id-ID,uk-UA,be-BY,sl-SI,et-EE,lv-LV,lt-LT,fa-IR,vi-VN,hy-AM,az-Latn-AZ,eu-ES,mk-MK,af-ZA,ka-GE,fo-FO,hi-IN,ms-MY,kk-KZ,ky-KG,sw-KE,uz-Latn-UZ,tt-RU,pa-IN,gu-IN,ta-IN,te-IN,kn-IN,mr-IN,sa-IN,mn-MN,gl-ES,kok-IN,syr-SY,dv-MV,ar-IQ,zh-CN,de-CH,en-GB,es-MX,fr-BE,it-CH,nl-BE,nn-NO,pt-PT,sr-Latn-CS,sv-FI,az-Cyrl-AZ,ms-BN,uz-Cyrl-UZ,ar-EG,zh-HK,de-AT,en-AU,es-ES,fr-CA,sr-Cyrl-CS,ar-LY,zh-SG,de-LU,en-CA,es-GT,fr-CH,ar-DZ,zh-MO,de-LI,en-NZ,es-CR,fr-LU,ar-MA,en-IE,es-PA,fr-MC,ar-TN,en-ZA,es-DO,ar-OM,en-JM,es-VE,ar-YE,en-029,es-CO,ar-SY,en-BZ,es-PE,ar-JO,en-TT,es-AR,ar-LB,en-ZW,es-EC,ar-KW,en-PH,es-CL,ar-AE,es-UY,ar-BH,es-PY,ar-QA,es-BO,es-SV,es-HN,es-NI,es-PR,cy-GB,mi-NZ,mt-MT,quz-BO,quz-EC,quz-PE,tn-ZA,xh-ZA,zu-ZA,nso-ZA,se-NO,se-SE,se-FI,smj-NO,smj-SE,sma-NO,sma-SE,sms-FI,smn-FI,hr-BA,bs-Latn-BA,sr-Latn-BA,sr-Cyrl-BA,bs-Cyrl-BA,fil-PH,lb-LU,ps-AF,fy-NL,arn-CL,ne-NP,iu-CA,ga-IE,moh-CA,rm-CH,bn-IN,ml-IN,de-DE@collation=phonebook,hu-HU@collation=technical,ka-GE@collation=modern,zh-CN@collation=stroke,zh-SG@collation=stroke,zh-MO@collation=stroke,zh-TW@collation=pinyin'.split(',');
				}
				StandardLib.sort(ids);
				alertBox.autoCompleteChoices = ids;
				
				var button:Button = new Button();
				button.label = lang("ID Syntax...");
				button.addEventListener(MouseEvent.CLICK, function(..._):void {
					navigateToURL(new URLRequest("http://unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers"), "_blank");
				});
				alertBox.alertButtons.addChildAt(button, 0);
				alertBox.addEventListener(AlertTextBoxEvent.BUTTON_CLICKED, 
					function (e:AlertTextBoxEvent):void 
					{
						// if the user clicked cancel, return
						if( !e.confirm )
							return;
						
						// get the code in the list
						WeaveAPI.LocaleManager.initializeLocale(e.textInput);
						activeLocale = e.textInput;
					}
				);
			}
			
			private function openTranslationEditor():void
			{
				var item:Object = dataGrid.selectedItem;
				if (!item)
					return;
				var alertBox:AlertTextBox = AlertTextBox.show(
					lang("Translate to {0}", activeLocale),
					lang("Translate the following text to {0}:\n\n{1}", activeLocale, item[ORIGINAL]),
					item[LOCALED]
				);
				alertBox.allowEmptyInput = true;
				alertBox.addEventListener(AlertTextBoxEvent.BUTTON_CLICKED, 
					function (e:AlertTextBoxEvent):void 
					{
						// if the user clicked, return
						if( !e.confirm )
							return;
						
						var newText:String = e.textInput;
						if (item[LOCALED] != newText)
						{
							var vsp:int = dataGrid.verticalScrollPosition;
							WeaveAPI.LocaleManager.registerTranslation(item[ORIGINAL], activeLocale, newText);
							item[LOCALED] = newText;
							dataGrid.dataProvider.refresh();
							dataGrid.verticalScrollPosition = vsp;
						}
					}
				);
			}
			
			private function resetAll():void
			{
				PopUpUtils.confirm(
					this,
					lang("Erase all translation data?"),
					lang("Are you sure you want to erase all translations for all locales and restart Weave? This cannot be undone."),
					function():void
					{
						WeaveAPI.LocaleManager.clearAllLocalizations();
						Weave.externalReload();
					}
				);
			}
			
			private function switchToDeveloperMode():void
			{
				WeaveAPI.LocaleManager.setLocale('developer');
				Weave.externalReload();
			}
			
			private function handleKeyDown(event:KeyboardEvent):void
			{
				if (dataGrid.selectedItem && (event.keyCode == Keyboard.DELETE || event.keyCode == Keyboard.BACKSPACE))
				{
					var originalText:String = dataGrid.selectedItem[ORIGINAL];
					var yes:Function = function():void
					{
						dataGrid.selectedItem = null;
						WeaveAPI.LocaleManager.removeEntry(originalText);
						refresh();
					};
					PopUpUtils.confirm(this, lang("Remove entry"), lang("Are you sure you want to remove this entry from all locales?"), yes, null, lang("Remove"), lang("Cancel"));
				}
			}
		]]>
	</mx:Script>
</DraggablePanel>
