<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<mx:HBox  xmlns:mx="http://www.adobe.com/2006/mxml" implements="weave.ui.CustomDataGrid.IFilterComponent"
		 verticalScrollPolicy="off" horizontalScrollPolicy="off">
	<mx:Script>
		<![CDATA[	
			import mx.events.FlexEvent;
			
			import weave.api.linkBindableProperty;
			import weave.api.registerLinkableChild;
			import weave.core.LinkableString;
			 
			public var column:DataGridColumnForQKeyWithFilterAndGraphics;
			public function mapColumnToFilter(column:DataGridColumnForQKeyWithFilterAndGraphics):void
			{
				this.column = column;
			}
			
			protected function strToSrchInput_initializeHandler(event:FlexEvent):void
			{				
				linkBindableProperty(strToSearch, event.target, 'text', 500);
			}
			
			public var regExp:RegExp;			
			public const strToSearch:LinkableString = registerLinkableChild(this, new LinkableString("", verifyStrToSearch),handleChangeInSearchString);
			
			private function verifyStrToSearch(value:String):Boolean
			{
				return value != null;
			}
			
			protected function handleChangeInSearchString():void
			{
				regExp = strToRegExp(strToSearch.value);
			}
					
			
			
			public function get isActive():Boolean
			{
				return (strToSearch.value != null && strToSearch.value != "");
			}
			
			public function filterFunction(obj:Object):Boolean
			{
				if (!regExp)
					return true;
				var str:String = column.itemToLabel(obj);
				return regExp.test(str);
			}
			
			public static function strToRegExp(strToSrch:String, flags:String = "i", asterisk:Boolean = true, questionMark:Boolean = true):RegExp
			{
				var resultStr:String;			
				//excape metacharacters other than "*" and "?"
				resultStr = strToSrch.replace(/[\^\$\\\.\+\(\)\[\]\{\}\|]/g, "\\$&");			
				//replace strToSrch "?" with reg exp equivalent "."
				resultStr = resultStr.replace(/[\?]/g, ".");			
				//replace strToSrch "*" with reg exp equivalen ".*?"
				resultStr = resultStr.replace(/[\*]/g, ".*?");			
				return new RegExp("^"+ resultStr, flags);
			}
			
			
		]]>
	</mx:Script>
	
	<mx:TextInput id="strToSrchInput"  width="100%" height="100%" minWidth="0" initialize="strToSrchInput_initializeHandler(event)"
				 />
		
</mx:HBox >
