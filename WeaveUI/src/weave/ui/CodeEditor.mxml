<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<!---
	This is a TextArea with typewriter font that accepts the tab key as character input and fixes tab stops.
-->
<mx:TextArea xmlns:mx="http://www.adobe.com/2006/mxml"
			 width="100%"
			 height="100%"
			 minHeight="24"
			 fontFamily="_typewriter"
			 fontSize="11"
			 keyFocusChange="handleKeyFocusChange(event)"
			 initialize="initTabStops();"
			 wordWrap="false">
	<mx:Script>
		<![CDATA[
			
			public var tabWidth:int = 28; // in _typewriter size 11, each character is 7 pixels
			
			private function initTabStops():void
			{
				var ts:Array = [];
				for (var i:int = 1; i <= 1000; i++)
					ts.push(i * tabWidth);
				var tf:TextFormat = new TextFormat();
				tf.tabStops = ts;
				textField.defaultTextFormat = tf;
			}
			
			//TODO - indent new line when pressing enter key
			/*
			keyDown="handleKeyDown(event)"
			private function handleKeyDown(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.ENTER)
				{
					var tabs = ""; //TODO
					textField.replaceSelectedText(tabs + '\n');
					event.preventDefault();
				}
			}
			*/
			
			private function handleKeyFocusChange(event:*):void
			{
				event.preventDefault();
				textField.replaceSelectedText('\t');
				if (text != null)
					text = textField.text;
				else
					htmlText = textField.htmlText;
				dispatchEvent(new Event(Event.CHANGE));
			}
		]]>
	</mx:Script>
</mx:TextArea>
