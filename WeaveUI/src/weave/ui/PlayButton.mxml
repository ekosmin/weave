<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<mx:VBox xmlns="weave.editors.*" 
		xmlns:mx="http://www.adobe.com/2006/mxml"
		xmlns:ui="weave.ui.*"
		enterFrame="handleEnterFrame(event)"
		horizontalAlign="center">
	<mx:Button id="button" label="&gt;" toggle="true" toolTip="{lang('Play')}" click="handlePlayClick();"/>
	<mx:HSlider id="slider" width="48" minWidth="0" minimum=".5" maximum="2" tickInterval="0.5" snapInterval="0.25" value=".75" dataTipFormatFunction="{formatPlayTip}" liveDragging="true"/>
	<mx:Script>
		<![CDATA[
			import weave.api.linkableObjectIsBusy;
			
			/**
			 * This is the value that the play button increments.
			 */
			[Bindable] public var step:int = 0;
			
			/**
			 * When this is true, the play button will not increment while WeaveAPI.globalHashMap is busy.
			 * @default true
			 */
			public var waitWhileBusy:Boolean = true;
			
			private function handlePlayClick():void
			{
				lastFrame = getTimer();
				//lastFrame = getTimer() - 1000 / slider.value / 2;
			}
			
			private var lastFrame:int = 0;
			private function handleEnterFrame(event:Event):void
			{
				if (button.selected)
				{
					if (waitWhileBusy && linkableObjectIsBusy(WeaveAPI.globalHashMap))
						return;
					if (lastFrame == 0 || getTimer() > lastFrame + 1000 / slider.value)
					{
						if (lastFrame)
							step++;
						lastFrame = getTimer();
					}
				}
			}
			private function formatPlayTip(value:Number):String
			{
				if (value == 1)
					return lang('1 frame per second');
				return value + lang(' frames per second');
			};
		]]>
	</mx:Script>
</mx:VBox>
