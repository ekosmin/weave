<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<!---
@author skolman
-->
<ui:ControlPanel xmlns="weave.ui.annotation.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
				 xmlns:ui="weave.ui.*"
				 horizontalScrollPolicy="off" verticalScrollPolicy="off"
				 layout="absolute"
				 title="{lang('Circle Settings')}"
				 width="40%"
				 height="40%"
				 >
	
	<mx:VBox id="circlePlotterControls" width="100%" paddingTop="3" horizontalAlign="left">
		<ui:IndentTextInput indent="100" label="{lang('X coordinate:')}" id="dataXText"/>
		<ui:IndentTextInput indent="100" label="{lang('Y coordinate:')}" id="dataYText"/>
		<ui:IndentTextInput indent="100" label="{lang('Radius:')}" id="radiusText"/>
		<mx:Spacer/>
		<ui:IndentTextInput indent="100" label="{lang('Thickness:')}" id="thicknessText"/>
		<ui:Indent indent="100" label="{lang('Color:')}">
			<ui:CustomColorPicker id="colorPicker"/>
		</ui:Indent>
	</mx:VBox>
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			
			import weave.api.core.ILinkableObject;
			import weave.api.linkBindableProperty;
			import weave.visualization.layers.PlotManager;
			import weave.visualization.plotters.CirclePlotter;
			import weave.visualization.tools.MapTool;
			
			override protected function childrenCreated():void
			{
				this.enableMoveResize.value = true;
			}
			
			private static var _addRemoveContextMenuItem:ContextMenuItem = null;
			private static const ADD_CAPTION:String = lang('Add Circle');
			
			public static function createContextMenuItems(destination:DisplayObject):Boolean
			{
				if(!destination.hasOwnProperty("contextMenu") )
					return false;
				
				// Add a listener to this destination context menu for when it is opened
				var contextMenu:ContextMenu = destination["contextMenu"] as ContextMenu;
				contextMenu.addEventListener(ContextMenuEvent.MENU_SELECT, handleContextMenuOpened);
				
				// Create a context menu item for printing of a single tool with title and logo
				_addRemoveContextMenuItem   = CustomContextMenuManager.createAndAddMenuItemToDestination(ADD_CAPTION,destination,handleAddCircle,"2.1 textBoxMenuItem");
				
				return true;
			}
			
			private static function handleAddCircle(e:ContextMenuEvent):void
			{
				if (panel)
				{
					var pm:PlotManager = (panel as MapTool).visualization.plotManager;
					var name:String = pm.plotters.generateUniqueName("circle");
					var newPlotter:CirclePlotter = pm.plotters.requestObject(name, CirclePlotter, false);
					
					var localAnchorPoint:Point = (panel as MapTool).visualization.globalToLocal(anchorPoint);
					pm.zoomBounds.projectScreenToData(localAnchorPoint);
					
					newPlotter.dataX.value = localAnchorPoint.x;
					newPlotter.dataY.value = localAnchorPoint.y;
					
					openInstance(newPlotter,name);
				}
			}
			
			
			
			private static var panel:DraggablePanel = null;
			private static var anchorPoint:Point = new Point();
			private static function handleContextMenuOpened(e:ContextMenuEvent):void
			{	
				
				
				panel = DraggablePanel.activePanel;
				if(panel is MapTool)
				{
					_addRemoveContextMenuItem.enabled = true;
					anchorPoint.x = WeaveAPI.StageUtils.stage.mouseX;
					anchorPoint.y = WeaveAPI.StageUtils.stage.mouseY;
				}
				else
				{
					_addRemoveContextMenuItem.enabled = false;
					panel = null;
				}
				
			}
			
			public var plotter:CirclePlotter = null;
			
			public static function openInstance(plotter:CirclePlotter,circleName:String):void
			{
				var settingsPanel:CirclePlotterSettings = PopUpManager.createPopUp(WeaveAPI.topLevelApplication as DisplayObject, CirclePlotterSettings) as CirclePlotterSettings;
				PopUpManager.centerPopUp(settingsPanel);
				
				settingsPanel.plotter = plotter;
				settingsPanel.targets = [plotter.radius, plotter.dataX, plotter.dataY, plotter.lineColor, plotter.thickness];
				
				var owner:ILinkableObject = WeaveAPI.SessionManager.getLinkableOwner(plotter);
				
				settingsPanel.title = lang('Edit {0}', circleName);
				
				linkBindableProperty(settingsPanel.plotter.dataX, settingsPanel.dataXText, "text");
				linkBindableProperty(settingsPanel.plotter.dataY, settingsPanel.dataYText, "text");
				linkBindableProperty(settingsPanel.plotter.radius, settingsPanel.radiusText, "text");
				linkBindableProperty(settingsPanel.plotter.lineColor, settingsPanel.colorPicker, "selectedColor");
				linkBindableProperty(settingsPanel.plotter.thickness,settingsPanel.thicknessText, "text");
			}
			
			
		]]>
	</mx:Script>
	
</ui:ControlPanel>
