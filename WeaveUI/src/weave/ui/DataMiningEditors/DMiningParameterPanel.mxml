<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<mx:Panel title="Algorithm Parameter Input Panel" xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" minHeight="0" minWidth="0"
		  paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop = "10" horizontalScrollPolicy="off" verticalScrollPolicy="off" creationPolicy="all">
	<mx:Canvas id="uichildrenContainer">
		
	</mx:Canvas>
	
	<mx:ControlBar id="cb" horizontalAlign="right" width="400" height="80">
		<mx:Button label="Save" id="saveB"/>
	</mx:ControlBar>
		
	<mx:Script>
		<![CDATA[
			import mx.containers.VBox;
			import mx.controls.Button;
			import mx.controls.Spacer;




			/* check the algorithm name and accordingly generate UI components and store the parameters in the corresponding datamining object 
			parameters are (1) the datamining object whose parameters have to be filled through the UI
			(2) Tha algorithm name example KMeans Clustering*/
			
			//this is the list of all the UI components to create for a particular algorithm
			public var uiComponents:Array = new Array();
			
			public function generateUIComponents(dmObject : DataMiningAlgorithmObject):Array
			{
				uiComponents = [];
				var algorithm:String = dmObject.label;
				
				if(algorithm == "KMeans Clustering") 
				   createParameterInputForKMeans(dmObject);
				
				if(algorithm == "Fuzzy KMeans Clustering")
					createParameterInputForFuzzyKMeans(dmObject);
				
				if(algorithm == "Partition Around Medoids Clustering")
					createParameterInputForPAM(dmObject);
					
				return uiComponents;
			}
			
			/*------------------------------------------creates editor for KMeans Clustering--------------------------------------------------------------*/
			private function createParameterInputForKMeans(dmObject:DataMiningAlgorithmObject):void
			{
				uiComponents = [];
				var kmeansVBox:VBox = new VBox();
				var s:Spacer = new Spacer(); s.width = 10; s.height = 10; kmeansVBox.addChild(s);
				
				//Input 
				var kMeansClusterInput:NumberInputComponent = new NumberInputComponent("kClusterNumber", "5");kMeansClusterInput.label = "Enter the number of clusters";
				var kMeansIterationsInput:NumberInputComponent = new NumberInputComponent("kIterationNumber", "500");kMeansIterationsInput.label = "Enter the number of iterations";
				var kMeansAlgo:ChoiceInputComponent = new ChoiceInputComponent("kMeansAlgo", ["Choose an algorithm","Hartigan-Wong", "Lloyd","Forgy", "MacQueen"]);
				kMeansAlgo.label = "Select an algorithm";
				
				dmObject.parameters = [kMeansClusterInput, kMeansIterationsInput, kMeansAlgo];
				
				for ( var f:int = 0; f < dmObject.parameters.length; f++)
				{
					kmeansVBox.addChild(dmObject.parameters[f]);
				} 
				
				
				//finally
				uiComponents.push(kmeansVBox);
				uiComponents.push(dmObject);
				
			}
			
			
			/*----------------------------------------------creates Editor for FuzzyKMeans Clustering-----------------------------------------------------------*/
			private function createParameterInputForFuzzyKMeans(dmObject:DataMiningAlgorithmObject):void
			{
				uiComponents = [];
				var fkmeansVBox:VBox = new VBox();
				var s:Spacer = new Spacer(); s.width = 10; s.height = 10; fkmeansVBox.addChild(s);
				//Input 
				var fuzzkMeansClusterInput:NumberInputComponent = new NumberInputComponent("fkClusterNumber", "5");
				fuzzkMeansClusterInput.label = "Enter the number of clusters";
				var fuzzkMeansIterationsInput:NumberInputComponent = new NumberInputComponent("fkIterationNumber", "500");
				fuzzkMeansIterationsInput.label = "Enter the number of iterations";
				var fuzzkMeansMetric:ChoiceInputComponent = new ChoiceInputComponent("fkMeansmetric", ["Choose a metric","euclidean", "manhattan"]);
				fuzzkMeansMetric.label = "Select a metric";
				
				dmObject.parameters = [fuzzkMeansClusterInput, fuzzkMeansIterationsInput, fuzzkMeansMetric];
				
				for ( var f:int = 0; f < dmObject.parameters.length; f++)
				{
					fkmeansVBox.addChild(dmObject.parameters[f]);
				} 
				
				
				//finally
				uiComponents.push(fkmeansVBox);
				uiComponents.push(dmObject);
			}
			
			/*----------------------------------------------creates Editor for PAM Clustering-----------------------------------------------------------*/
			
			private function createParameterInputForPAM(dmObject:DataMiningAlgorithmObject):void
			{
				uiComponents = [];
				var pamVBox:VBox = new VBox();
				var s:Spacer = new Spacer(); s.width = 10; s.height = 10; pamVBox.addChild(s);
				//Input 
				
				var pamClusterInput:NumberInputComponent = new NumberInputComponent("pamClusternumber", "5");
				pamClusterInput.label = "Enter the number of clusters";
				var pamMetric:ChoiceInputComponent = new ChoiceInputComponent("pammetric", ["Choose a metric","euclidean", "manhattan"]);
				pamMetric.label = "Select a metric";
				
				dmObject.parameters = [pamClusterInput, pamMetric];
				
				for(var d:int = 0; d < dmObject.parameters.length; d++)
				{
					pamVBox.addChild(dmObject.parameters[d]);
				}
				
				//finally
				uiComponents.push(pamVBox);
				uiComponents.push(dmObject);
			}
			
		]]>
	</mx:Script>
</mx:Panel>
