<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<!---
@author spurushe
-->
<DraggablePanel xmlns="weave.ui.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
				horizontalScrollPolicy="off" verticalScrollPolicy="off"
				title="FuzzyK Means Clustering Editor"
				
				backgroundColor="#EFF4BC" width="300" height="400"
				layout="horizontal"
				autoLayout="true"
				implements="weave.api.ui.IVisTool"
				>
	<mx:HBox width="100%" height="100%">
		<mx:VBox width="50%" paddingLeft="5" paddingBottom="5" paddingRight="5" height="100%">
		<mx:Label text="1.Select the input Columns" fontWeight="bold"/>	
		<ColumnListComponent id="fkMeansColumns" hashMap="{inputColumns}"/>
		</mx:VBox>
		<mx:VBox id="inputUI" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" height="100%">
			
			<!--mx:Button id="editScript" label="View/Edit Script" click="editScript_clickHandler(event)"/>
			<mx:TextArea id="displayScriptTA" width="100%">
				
			</mx:TextArea>
			<mx:Button label="Run Script" id="doFuzzKMeansButton" click="dofuzzyKMeansButton_clickHandler(event)"/-->
		</mx:VBox>
	
	</mx:HBox>
	<mx:Script>
		<![CDATA[
			import mx.controls.Button;
			
			import weave.Weave;
			import weave.api.data.IAttributeColumn;
			import weave.api.registerLinkableChild;
			import weave.api.ui.IVisTool;
			import weave.core.LinkableHashMap;
			import weave.services.WeaveRServlet;
			import weave.utils.ColumnUtils;
			import weave.utils.ResultUtils;
			
			public const inputColumns:LinkableHashMap = registerLinkableChild(this, new LinkableHashMap(IAttributeColumn));
			private var Rservice:WeaveRServlet = new WeaveRServlet(Weave.properties.rServiceURL.value);
			private var assignNames: Array = new Array();
			public var latestColumnKeys:Array = new Array();
			public var finalColumns:Array = new Array();
			
			//initializing the input UI
			public var fuzzyKMeans:FuzzyKMeansClustering = new FuzzyKMeansClustering(this);
			//public var kMeansResult:KMeansClusteringResult;
			private var fuzzkMeansClusterInput:NumberInputComponent;
			private var fuzzkMeansIterationsInput:NumberInputComponent;
			private var fuzzkMeansRandomSets:NumberInputComponent;
			private var fuzzkMeansMetric:ChoiceInputComponent;
			
			override protected function inConstructor():void
			{
				super.inConstructor();
				var columns:Array = ColumnUtils.getColumnsWithCommonKeyType();
				for (var i:int = 0; i < columns.length; i++)
					inputColumns.requestObjectCopy(null, columns[i]);
			}
			
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				preprocessingColumns();
				inputColumns.addGroupedCallback(this, preprocessingColumns);
			}
			
			override protected function createChildren():void
			{
				if (createdChildren)
					return;
				super.createChildren();
				fuzzkMeansClusterInput = new NumberInputComponent("fkClusterNumber", "5");
				fuzzkMeansClusterInput.label = "Enter the number of clusters";
				fuzzkMeansIterationsInput = new NumberInputComponent("fkIterationNumber", "500");
				fuzzkMeansIterationsInput.label = "Enter the number of iterations";
				fuzzkMeansMetric = new ChoiceInputComponent("fkMeansmetric", ["Choose a metric","euclidean", "manhattan"]);
				fuzzkMeansMetric.label = "Select a metric";
				var doFuzzKMeansButton:Button = new Button();
				doFuzzKMeansButton.label = "Run Script";
				doFuzzKMeansButton.addEventListener(MouseEvent.CLICK, dofuzzyKMeansButton_clickHandler);
				
				inputUI.addChild(fuzzkMeansClusterInput);
				inputUI.addChild(fuzzkMeansIterationsInput);
				inputUI.addChild(fuzzkMeansMetric); 
				inputUI.addChild(doFuzzKMeansButton);
				
			}
			
			
			// we need only numerical columns for clustering
			public function preprocessingColumns():void
			{
				var colObjects:Array = inputColumns.getObjects(IAttributeColumn);
				var attributeColumns :Array = new Array();
				for (var i:int = 0; i < colObjects.length; i++)
				{
					var col:IAttributeColumn = colObjects[i] as IAttributeColumn;
					var datatype:String = ColumnUtils.getDataType(col);
					if(datatype == "number")
					{
						attributeColumns.push(col);
					}
					
					var joinedColumns:Array = ResultUtils.joinColumns(attributeColumns);
					latestColumnKeys = joinedColumns[0];
					finalColumns = joinedColumns[1];
				}
			}
			
			/* private function editScript_clickHandler(event:MouseEvent):void
			{
				//to do: Make script change accoring to user inputs of parameters
				displayScriptTA.text = "frame <- data.frame(inputColumns)\n" +
					"fuzzkMeansResult <- fanny(frame,"+ fuzzkMeansClusterInput.numberInput.text + ", euclidean" + ","+ fuzzkMeansIterationsInput.numberInput.text +")";
			} */
			
			private function dofuzzyKMeansButton_clickHandler(event:MouseEvent):void
			{
				var clusternumber:Number = Number(fuzzkMeansClusterInput.numberInput.text);
				var iterationNumber:Number = Number(fuzzkMeansIterationsInput.numberInput.text);
				var dmetric:String = String(fuzzkMeansMetric.choiceBox.selectedLabel);
				 if(dmetric == "Choose distance metric")
				{
					fuzzyKMeans.doFuzzyKMeans(finalColumns,latestColumnKeys,clusternumber,iterationNumber, "euclidean" );
					
				}
				else
				{
					fuzzyKMeans.doFuzzyKMeans(finalColumns,latestColumnKeys,clusternumber,iterationNumber,dmetric);
				} 
			}

		]]>
	</mx:Script>

</DraggablePanel>
