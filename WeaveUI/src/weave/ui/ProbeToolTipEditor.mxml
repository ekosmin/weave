<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<ControlPanel xmlns="weave.ui.*"
			  xmlns:mx="http://www.adobe.com/2006/mxml"
			  backgroundColor="#EFF4BC" horizontalScrollPolicy="off" layout="absolute"
			  implements="weave.api.ui.ISelectableAttributes"
			  title="{lang('Mouseover Info Editor')}" verticalScrollPolicy="off">
	<mx:VBox label="{lang('Header Columns')}">
		<mx:HBox width="100%" verticalAlign="middle">
			<HelpComponent label="{lang('Header Columns')}">
				<mx:Label text="{lang('Example tooltip:')}"/>
				<mx:HBox styleName="exampleStyle">
					<mx:Image source="@Embed(source='/weave/resources/images/tooltipheader.png')"/> 
				</mx:HBox>
				<mx:Label text="{lang('The attributes highlighted in green are header columns.')}"/>
			</HelpComponent>
			<Paragraph translate="true">
				The values from these columns will be listed in a single line, separated by commas.
			</Paragraph>
		</mx:HBox>
		<ColumnListComponent id="headerList" width="100%" height="100%"/>		
		<mx:CheckBox label="{lang('Enable mouseover ToolTips')}"
					 visible="{showEnableCheckBox}" includeInLayout="{showEnableCheckBox}"
					 creationComplete="linkBindableProperty(ProbeTextUtils.enableProbeToolTip, event.target, 'selected')"/>
	</mx:VBox>
	
	<mx:VDividedBox label="{lang('Data Columns')}">
		<mx:VBox width="100%" height="100%">
			<mx:HBox width="100%" verticalAlign="middle">
				<HelpComponent label="{lang('Data Columns')}">
					<mx:Label text="{lang('Example:')}"/>
					<mx:HBox styleName="exampleStyle">
						<mx:Image source="@Embed(source='/weave/resources/images/tooltipProbed.png')"/>
					</mx:HBox>
					<mx:Label text="{lang('The attributes highlighted in green are the data columns')}"/>
				</HelpComponent>
				<Paragraph translate="true">
					The values from these columns will be displayed under the header line along with the column names.
				</Paragraph>
			</mx:HBox>
			<ColumnListComponent id="columnList" width="100%" height="100%"/>
		</mx:VBox>
		<mx:VBox width="100%" id="formatVBox">
			<Indent id="formatIndent" label="{lang('Format')}" height="100%">
				<mx:TextArea id="format" width="100%" height="100%" minHeight="48"
							 creationComplete="linkBindableProperty(ProbeTextUtils.probeLineFormatter, event.target, 'text');"/>
				<mx:Button label="{lang('Reset')}" click="ProbeTextUtils.probeLineFormatter.value = ProbeTextUtils.DEFAULT_LINE_FORMAT;"/>
				<htmlHelpContent>
					<![CDATA[
						This expression will be used to format each line corresponding to a data column. <!--
						-->Available variables are <b>column</b>, <b>key</b>, <b>string</b>, and <b>title</b>.
					]]>
				</htmlHelpContent>
			</Indent>
			<mx:CheckBox label="{lang('Enable mouseover ToolTips')}"
						 visible="{showEnableCheckBox}" includeInLayout="{showEnableCheckBox}"
						 creationComplete="linkBindableProperty(ProbeTextUtils.enableProbeToolTip, event.target, 'selected')"/>
		</mx:VBox>
	</mx:VDividedBox>
	<mx:Style>
		.exampleStyle {
			borderStyle:solid;
			borderThickness:2;
			borderColor:#4D5258;
		}
	</mx:Style>
	<mx:Script>
		<![CDATA[
			import mx.controls.Image;
			
			import weave.api.linkBindableProperty;
			import weave.utils.ProbeTextUtils;
			
			private const pad:Number = 3;
			
			[Bindable] public var showEnableCheckBox:Boolean = true;
			
			public function getSelectableAttributes():Array
			{
				return [ProbeTextUtils.probeHeaderColumns, ProbeTextUtils.probedColumns];
			}
			public function getSelectableAttributeNames():Array
			{
				return ["Header Columns", "Data Columns"];
			}
			
			override protected function inConstructor():void
			{
				super.inConstructor();
			}
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				
				this.targets = [
					ProbeTextUtils.probedColumns,
					ProbeTextUtils.probeHeaderColumns,
					ProbeTextUtils.probeLineFormatter,
					ProbeTextUtils.enableProbeToolTip
				];
				controlPanelControls.tabNavigator.selectedIndex = 1;
				
				headerList.overrideOwner = this;
				columnList.overrideOwner = this;
				headerList.hashMap = ProbeTextUtils.probeHeaderColumns;
				columnList.hashMap = ProbeTextUtils.probedColumns;
				
				ProbeTextUtils.probeLineFormatter.addImmediateCallback(this, validateFormatter);
			}
			
			public function validateFormatter():void
			{
				try
				{
					ProbeTextUtils.probeLineFormatter.validate();
					format.errorString = '';
				}
				catch (e:Error)
				{
					format.errorString = e.message;
				}
			}
		]]>
	</mx:Script>
</ControlPanel>
