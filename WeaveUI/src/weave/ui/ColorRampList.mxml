<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->

<!---
@author abaumann
@author adufilie
-->
<mx:DataGrid
		xmlns:mx="http://www.adobe.com/2006/mxml" 
		xmlns="weave.ui.*"
		implements="weave.api.core.ILinkableObject"
		useRollOver="false"
		minWidth="200" width="100%" height="100%"
		fontWeight="normal"
		paddingBottom="2" paddingTop="2" paddingLeft="5" paddingRight="5" 
		horizontalScrollPolicy="auto" verticalScrollPolicy="on"
		allowMultipleSelection="false"
		dataProvider="{ColorRamp.allColorRamps.colorRamp}"
		change="handleColorRampSelected()">
	<mx:columns>
		<mx:DataGridColumn dataField="@name"  headerText="{lang('Color scale presets')}">
			<mx:itemRenderer>
				<mx:Component>
					<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" 
							   horizontalScrollPolicy="off" 
							   verticalScrollPolicy="off"
							   paddingLeft="2"
							   width="100%">
						<mx:Canvas id="colorRampCanvas"
								   borderStyle="solid" borderColor="0x000000" 
								   height="18" width="50%"/>
						<mx:Label text="{label}" width="50%"/>
						
						<mx:Script>
							<![CDATA[
								import weave.primitives.ColorRamp;
								
								private const colorRamp:ColorRamp = new ColorRamp();
								
								override public function set data(value:Object):void
								{
									var xml:XML = value as XML;
									
									super.data = xml;
									
									if (!xml)
										return;
									
									label = xml.@name;
									colorRamp.setSessionState(xml);
									toolTip = xml.@name + '\nTags: ' + xml.@tags;
								}
								override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
								{
									super.updateDisplayList(unscaledWidth, unscaledHeight);
									colorRamp.draw(colorRampCanvas, 1, 0);
								}
							]]>
						</mx:Script>
					</mx:HBox>
				</mx:Component>
			</mx:itemRenderer>
		</mx:DataGridColumn>
	</mx:columns>
	<mx:Script>
		<![CDATA[
			import weave.primitives.ColorRamp;
			
			private var _colorRamp:ColorRamp = null;
			
			public function get colorRamp():ColorRamp
			{
				return _colorRamp;
			}
			public function set colorRamp(value:ColorRamp):void
			{
				if (_colorRamp == value)
					return;
				
				if (_colorRamp)
					_colorRamp.removeCallback(colorRampCallback);
				
				_colorRamp = value;
				
				if (_colorRamp)
					_colorRamp.addImmediateCallback(this, colorRampCallback);
			}
			
			private function colorRampCallback():void
			{
				// find item with matching name
				var xml:XML = ColorRamp.findMatchingColorRampXML(colorRamp);
				if (xml)
					selectedItem = xml;
			}
			
			private function handleColorRampSelected():void
			{
				if (selectedItem is XML && colorRamp)
					colorRamp.setSessionState(selectedItem.copy());
			}
						
		]]>
	</mx:Script>
</mx:DataGrid>
