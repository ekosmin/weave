<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
		   width="18" height="24" mouseChildren="false">	
	
	<mx:Move id="moveEvent" duration="600" 
			 xFrom="{xFrom}" xTo="{xTo}"
			 yFrom="{yFrom}" yTo="{yTo}"
			 />
	
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			
			private var vertices:Array =
				[
					[ 0, 16 ],
					[ 1, 16 ],
					[ 4, 13 ],
					[ 8, 20 ],
					[ 9, 20 ],
					[ 10, 19 ],
					[ 7, 12 ],
					[ 11, 12 ],
					[ 11, 11 ],
					[ 0, 0 ]
				];
			private var filtersArray:Array;
			public var color:uint;
			
			[Bindable] public var xFrom:Number = 0;
			[Bindable] public var xTo:Number = 0;
			[Bindable] public var yFrom:Number = 0;
			[Bindable] public var yTo:Number = 0;
			
			override protected function createChildren():void
			{
				super.createChildren();
			}
			public static function addPopUp(parent:DisplayObject):CollabMouseCursor
			{
				var cursor:CollabMouseCursor = PopUpManager.createPopUp(parent, CollabMouseCursor) as CollabMouseCursor;
				PopUpManager.centerPopUp(cursor);
				cursor.initializeCursor();
				
				return cursor;
			}
			
			public function setPos(x:Number, y:Number):void
			{
				moveEvent.stop();
				yFrom = this.y;
				xFrom = this.x;
				yTo = y;
				xTo = x;
				moveEvent.play([this]);
			}
			public function initializeCursor():void
			{
				color = 0;
				graphics.clear();
				graphics.lineStyle(1, 0, 1.0, true);
				graphics.moveTo(0, 0);
				for each( var vertex:Array in vertices )
					graphics.lineTo(vertex[0], vertex[1]);
			}
			public function fillCursor(color:uint):void
			{
				this.color = color;
				graphics.clear();
				graphics.lineStyle(1, 0, 1.0, true);
				graphics.moveTo(0, 0);
				graphics.beginFill(color, 0.5);
				for each( var vertex:Array in vertices )
					graphics.lineTo(vertex[0], vertex[1]);
				graphics.endFill();
				this.filters = [ new DropShadowFilter() ];
			}
			public function removePopUp():void
			{
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
</mx:Canvas>
