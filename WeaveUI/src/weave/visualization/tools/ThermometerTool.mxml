<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<SimpleVisTool xmlns="weave.visualization.tools.*" 
	     xmlns:mx="http://www.adobe.com/2006/mxml"
	     xmlns:ui="weave.ui.*" xmlns:tools="weave.visualization.tools.*" 
	     layout="absolute"
		 xmlns:settings="weave.ui.settings.*" xmlns:LinkableObjectList="weave.ui.LinkableObjectList.*">
	<mx:Script>
		<![CDATA[
			import weave.Weave;
			import weave.api.getCallbackCollection;
			import weave.api.ui.IVisTool;
			import weave.ui.AttributeSelectorPanel;
			import weave.utils.BitmapText;
			import weave.utils.ColumnUtils;
			import weave.visualization.layers.SimpleInteractiveVisualization;
			import weave.visualization.plotters.ThermometerPlotter;
			
			WeaveAPI.ClassRegistry.registerImplementation(IVisTool, ThermometerTool, "Thermometer Tool");
			
			internal function get plotter():ThermometerPlotter { return mainPlotter as ThermometerPlotter; }
			override protected function inConstructor():void
			{
				super.inConstructor();
				// lock dynamic objects into place
				initializePlotters(ThermometerPlotter, true);
				visualization.plotManager.getLayerSettings(SimpleInteractiveVisualization.X_AXIS_LAYER_NAME).visible.value = false;
				visualization.plotManager.includeNonSelectableLayersInAutoZoom.value = true;
				
				// by default this tool only displays the probed records.
				// TEMPORARY SOLUTION until we start using VisToolGroup
				mainPlotter.filteredKeySet.keyFilter.targetPath = [Weave.DEFAULT_PROBE_KEYSET];
				//mainLayerSettings.subsetFilter.globalName = Weave.DEFAULT_PROBE_KEYSET;
				mainLayerSettings.selectionFilter.removeObject();
				mainLayerSettings.probeFilter.removeObject();
				mainLayerSettings.selectable.value = false;

				//BEGIN TEMPORARY SOLUTION
				visualization.plotManager.marginLeftNumber.addImmediateCallback(this, updateAxisLabels);
				visualization.plotManager.marginBottomNumber.addImmediateCallback(this, updateAxisLabels);
				getCallbackCollection(plotter).addImmediateCallback(this, updateAxisLabels, true);
				// END TEMPORARY SOLUTION
				
				visualization.plotManager.marginBottom.value = "80";
				visualization.plotManager.marginTop.value    = "30";
				visualization.plotManager.marginLeft.value   = "80";
				visualization.plotManager.marginRight.value  = "10";
				
				yAxisPlotter.axisLabelRelativeAngle.value = 90;
				visualization.leftMarginClickCallbacks.addImmediateCallback(this, function():void { AttributeSelectorPanel.open(plotter.meterColumn); })

				getCallbackCollection(visualization.plotManager.zoomBounds).addImmediateCallback(this, invalidateAxes);
				getCallbackCollection(plotter).addImmediateCallback(this, invalidateAxes);
				invalidateAxes();
			}
			
			private function invalidateAxes():void
			{
				handlePanelTitleChange();
			}
			
			override public function get defaultPanelTitle():String
			{
				return lang("Thermometer of {0}", ColumnUtils.getTitle(plotter.meterColumn));
			}
			
			private function updateAxisLabels():void
			{
				yAxisPlotter.setSideAxisName(ColumnUtils.getTitle(plotter.meterColumn), 
																-90, 
																-visualization.plotManager.marginLeftNumber.value, 0,
																BitmapText.VERTICAL_ALIGN_TOP);
			}

		]]>
	</mx:Script>
	<editorFactory><mx:Component><ui:ControlPanel>
		<mx:VBox label="{lang('Attributes')}">
			<ui:DynamicColumnComponent label="{lang('Meter column:')}" creationComplete="(event.target as DynamicColumnComponent).dynamicObject = outerDocument.plotter.meterColumn"/>
		</mx:VBox>
	</ui:ControlPanel></mx:Component></editorFactory>
</SimpleVisTool>
