<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<SimpleVisTool xmlns="weave.visualization.tools.*" 
	     xmlns:mx="http://www.adobe.com/2006/mxml"
	     xmlns:ui="weave.ui.*" 
		 xmlns:userControls="weave.ui.userControls.*"
		 layout="absolute">
	<mx:Script>
		<![CDATA[
			import weave.api.linkBindableProperty;
			import weave.api.registerLinkableChild;
			import weave.core.LinkableBoolean;
			import weave.utils.ColumnUtils;
			import weave.visualization.plotters.StickFigureGlyphPlotter;
			
			public var _plotter:StickFigureGlyphPlotter = null;
			override protected function inConstructor():void
			{
				super.inConstructor();
				// lock dynamic objects into place
				_plotter = initializePlotters(StickFigureGlyphPlotter, true);

				_plotter.dataX.addImmediateCallback(this,updateProbeColumns);
				_plotter.dataY.addImmediateCallback(this,updateProbeColumns);
				_plotter.theta1.addImmediateCallback(this,updateProbeColumns);
				_plotter.theta2.addImmediateCallback(this,updateProbeColumns);
				_plotter.theta3.addImmediateCallback(this,updateProbeColumns);
				_plotter.theta4.addImmediateCallback(this,updateProbeColumns);
			}
			
			public const includeToolAttributesInProbe:LinkableBoolean = registerLinkableChild(this, new LinkableBoolean(true), updateProbeColumns);
			
			private function updateProbeColumns():void
			{
				if(includeToolAttributesInProbe.value)
				{
					visualization.additionalProbeColumns = [];
					if(_plotter.dataX.getInternalColumn()) visualization.additionalProbeColumns.push(_plotter.dataX.getInternalColumn());
					if(_plotter.dataY.getInternalColumn()) visualization.additionalProbeColumns.push(_plotter.dataY.getInternalColumn());
					if(_plotter.theta1.getInternalColumn()) visualization.additionalProbeColumns.push(_plotter.theta1.getInternalColumn());
					if(_plotter.theta2.getInternalColumn()) visualization.additionalProbeColumns.push(_plotter.theta2.getInternalColumn());
					if(_plotter.theta3.getInternalColumn()) visualization.additionalProbeColumns.push(_plotter.theta3.getInternalColumn());
					if(_plotter.theta4.getInternalColumn()) visualization.additionalProbeColumns.push(_plotter.theta4.getInternalColumn());
					if(visualization.additionalProbeColumns.length == 0) visualization.additionalProbeColumns = null ;
				}
				else visualization.additionalProbeColumns = null;
				//else ProbeTextUtils.probedColumns.copyObject('probedColumns',oldProbeColumns);
			}
			
			override public function get defaultPanelTitle():String
			{
				return lang(
					"Stick Figure Plot of {0} -vs- {1}, with angles of {2}, {3}, {4}, {5}",
					ColumnUtils.getTitle(_plotter.dataX),
					ColumnUtils.getTitle(_plotter.dataY),
					ColumnUtils.getTitle(_plotter.theta1), 
					ColumnUtils.getTitle(_plotter.theta2), 
					ColumnUtils.getTitle(_plotter.theta3), 
					ColumnUtils.getTitle(_plotter.theta4)
				);
			}

			override protected function childrenCreated():void
			{
				super.childrenCreated();
				
				linkBindableProperty( _plotter.curvature,  curvatureSlider, "value");
				linkBindableProperty( _plotter.lineStyle.weight.defaultValue,  thicknessSlider, "value");
			}
		]]>
	</mx:Script>
	<ui:ControlPanel>
			<mx:Panel id="VizControlsPanel" 
					  label="{lang('Visualization Controls')}" 
					  headerHeight="2"
					  borderColor="0x000000" 
					  backgroundColor="0xCCCCCC" 
					  backgroundAlpha="0.0" 
					  borderThickness="0.0" 
					  height="100%" 
					  width="100%" 
					  borderAlpha="0.2" 
					  borderStyle="none">
				<mx:CheckBox id="probeColumnsCheckBox" label="Include tool attributes in probe tooltip"
							 toolTip="{lang('Checking this box makes the x, y, color and size attributes visible in this tool\'s probe tooltip')}"
							 creationComplete="linkBindableProperty(includeToolAttributesInProbe,event.target,'selected')"/>
				<ui:DynamicColumnComponent label="data X" creationComplete="(event.target as DynamicColumnComponent).dynamicObject = _plotter.dataX"/>
				<ui:DynamicColumnComponent label="data y" creationComplete="(event.target as DynamicColumnComponent).dynamicObject = _plotter.dataY"/>
				<ui:DynamicColumnComponent label="theta1" creationComplete="(event.target as DynamicColumnComponent).dynamicObject = _plotter.theta1"/>
				<ui:DynamicColumnComponent label="theta2" creationComplete="(event.target as DynamicColumnComponent).dynamicObject = _plotter.theta2"/>
				<ui:DynamicColumnComponent label="theta3" creationComplete="(event.target as DynamicColumnComponent).dynamicObject = _plotter.theta3"/>
				<ui:DynamicColumnComponent label="theta4" creationComplete="(event.target as DynamicColumnComponent).dynamicObject = _plotter.theta4"/>
				
				
				<mx:VBox width="100%" 
						 verticalGap="0">
					<mx:VBox width="100%" 
							 id="cntrols">
						<mx:HBox width="100%" 
								 borderStyle="inset" 
								 backgroundColor="0xFFFFFF" 
								 backgroundAlpha="0.7">
							<mx:Label text="{lang('Line Curvature:')}" 
									  color="0x000000" fontSize="12" 
									  toolTip=""/>
							
							<mx:HSlider id="curvatureSlider" 
										width="100%" 
										minimum="-1" maximum="1" value="0"  snapInterval="0.1" tickInterval="0.1"
										liveDragging="true"/>
						</mx:HBox>
						<mx:HBox width="100%" 
								 borderStyle="inset" 
								 backgroundColor="0xFFFFFF" 
								 backgroundAlpha="0.7">
							<mx:Label text="{lang('Line Thickness:')}" 
									  color="0x000000" fontSize="12" 
									  toolTip=""/>
							
							<mx:HSlider id="thicknessSlider" 
										width="100%" 
										minimum="1" maximum="4" value="1"  snapInterval="1" tickInterval="1"
										liveDragging="true"/>
						</mx:HBox>
					</mx:VBox>
				</mx:VBox>
			</mx:Panel>
	</ui:ControlPanel>
</SimpleVisTool>
